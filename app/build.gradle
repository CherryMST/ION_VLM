import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    //release key
//    signingConfigs {
//        release {
//            keyAlias 'android.keystore'
//            keyPassword 'xxxx'
//            storeFile file('../app/android.keystore')
//            storePassword 'xxxx'
//        }
//    }
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    defaultConfig {
        applicationId "com.nokia.vlm"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 2
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        signingConfig signingConfigs.release

        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "armeabi-v8a", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
        //disable "ResourceType"
    }
    productFlavors {

    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk') && outputFile.name.contains('release')) {
                //这里修改apk文件名
                def fileName = outputFile.name.replace("app", "${defaultConfig.applicationId}_${defaultConfig.versionCode}_${defaultConfig.versionName}_${releaseTime()}")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    android {
        useLibrary 'org.apache.http.legacy'
    }


}


def releaseTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmmss")
    df.setTimeZone(TimeZone.getDefault())
    return df.format(new Date())
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':framelib')
    compile 'com.zhy:base-rvadapter:3.0.3'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'jp.wasabeef:glide-transformations:2.0.2'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.google.android:flexbox:0.2.5'
    compile 'com.github.promeg:tinypinyin:2.0.3'
    compile 'com.github.githubwing:DragPhotoView:1.0.1'
    compile 'com.youth.banner:banner:1.4.10'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile project(':NumberPrick')
    compile 'com.google.code.gson:gson:2.8.2'
    //    compile files('libs/gson-2.8.2.jar')
    compile files('libs/fastjson-1.2.41.jar')
}
